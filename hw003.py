# Задача 1. Задайте список из нескольких чисел.
# Напишите программу, которая найдёт сумму элементов списка,
# стоящих на нечётной позиции.

# Пример:
# - [2, 3, 5, 9, 3] -> на нечётных позициях элементы 3 и 9, ответ: 12

# num = [2, 3, 5, 9, 3]
# print(sum(num[i] for i in range(1, len(num), 2)))
# print(sum(num[1::2]))


# Задача 2. Напишите программу, которая найдёт произведение пар чисел списка.
# Парой считаем первый и последний элемент, второй и предпоследний и т.д.
# Пример:
# - [2, 3, 4, 5, 6] => [12, 15, 16];
# - [2, 3, 5, 6] => [12, 15]

# num = [2, 3, 4, 5, 6]
# result = [mult := num[i] * num[-1 - i] for i in range((len(num) + 1) // 2)]
# print(result)


# Задача 3. Задайте список из вещественных чисел.
# Напишите программу, которая найдёт разницу между
# максимальным и минимальным значением дробной части элементов.
# Пример:
# - [1.1, 1.2, 3.1, 5, 10.01] => 0.20

# num = [1.1, 1.2, 3.1, 5, 10.01]
# max = 0
# min = 1
# for i in num:
#     if (i - int(i)) > max:
#         max = i - int(i)
#     if (i - int(i)) < min:
#         min = i - int(i)
# print(round((max-min), 2))


# Задача 4. Напишите программу,
# которая будет преобразовывать десятичное число в двоичное.
# Пример:
# - 45 -> 101101
# - 3 -> 11
# - 2 -> 10


# num = int(input('Число:'))
# print(bin(num).replace('0b',''))


# num = int(input('Число в десятичной системе: '))
# bin = ''
# while num > 0:
#     bin = str(num % 2) + bin
#     print(num  % 2)
#     num //= 2
# print(bin)


# def decimalToBinary(n):

#     if(n > 1):
#         decimalToBinary(n//2)
#     print(n%2, end=' ')

# decimalToBinary(45)


# Задача 5. Задайте число. Составьте список чисел Фибоначчи,
# в том числе для отрицательных индексов.
# Пример:
# - для k = 8 список будет выглядеть так:
# [-21 ,13, -8, 5, −3, 2, −1, 1, 0, 1, 1, 2, 3, 5, 8, 13, 21]

# def fibonacci(n):
#     if n < 0:
#         return (-1) ** (-n + 1) * fibonacci(-n)
#     if n in (1, 2):
#         return 1
#     return fibonacci(n - 1) + fibonacci(n - 2)


# k = int(input('Задайте число: '))
# result = [result := fibonacci(i) for i in range(-k, k + 1)]
# print(result)
